sep=,
#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <fstream>
#include <algorithm>
class Word{
	
	private:
		std::string word;
		unsigned int count;
		
	public:
		
	
		Word(std::string W, unsigned int C){
			this->word = W;
			this->count = C;
		};
	
		std::string get_word(){return this->word;}
	
		unsigned int get_count(){return this->count;}
	
		void output_in_CSV(FILE * of){
			if(of == NULL)
				throw "Error: can't open this file\n";	
			fprintf(of, "%s, %u\n", this->get_word().c_str(),this->get_count());
		};
					
		operator <(Word w_1){
			return this->count < w_1.count;
		};
		
		~Word(){};
		
};

using namespace std;


class TXTtoCSV{

	private:
		FILE * input_file;
		FILE * output_file;
		map <string, unsigned int> dict;
		vector <Word> array;

	public:

		TXTtoCSV(const char * file_name){
			this->input_file = fopen(file_name, "rb");
			//check some error 
		};
		
		void build_dict(){
			string str_word = "";
			char tmpBuff;

			while(fscanf(this->input_file, "%c", &tmpBuff) > 0){
				if(isalpha(int(tmpBuff)))
					str_word.append(&tmpBuff, 1);
				else{
					if(str_word != ""){
						if(this->dict.count(str_word))
							this->dict.at(str_word) += 1u;
						else			
							this->dict.insert(pair<string, unsigned int>(str_word, 1u));
						str_word.assign("");						
					}
				}
			}
		};
		
		
		void build_array(){
			map<string, unsigned int>::iterator It ;//= this->dict.begin()
			for( It = this->dict.begin(); It != dict.end();++It)
				this->array.push_back(Word(It->first, It->second));
			sort(this->array.begin(), this->array.end());
		};
		
		build_CSV(char * output_file_name){	
			this->build_dict();
			this->build_array();
			this->output_file = fopen(output_file_name, "a");
			if(this->output_file == NULL)
				throw "Error: can't open this file\n";
			
			for(int i = this->array.size() - 1; i >= 0; i--){
				this->array[i].output_in_CSV(this->output_file);
			}
		};
		
		~TXTtoCSV(){fclose(this->input_file); fclose(this->output_file);};
};

int main(void){
	try{
	TXTtoCSV Data = TXTtoCSV("input.txt");
	Data.build_CSV("output.csv");
	}
	catch(...){
		exit(0);	
	};
}